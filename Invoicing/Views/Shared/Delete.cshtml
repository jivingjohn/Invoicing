@model BaseModel

@{
    ViewData["Title"] = Html.DisplayTextFor(model => model.DeleteText);
}

<div class="text-center">
    <h1 class="display-4">@Html.DisplayTextFor(model => model.DeleteText)</h1>
</div>

<div class="row">
    <div class="col col-sm-4"></div>
    <div class="col col-sm-4">
        <div class="row">         
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                if (property.DisplayName != null)
                {
                    <div class="form-group form-inline">
                        <div class="col col-sm-6">
                            @Html.Label(property.DisplayName)
                        </div>
                        <div class="col col-sm-6">
                            @Html.Editor(property.PropertyName, null, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                        </div>
                    </div>
                }
            }
        </div>
        <div class="row">
            @using (Html.BeginForm(Model.ConfirmDeleteForm.Action, Model.ConfirmDeleteForm.Controller))
            {
                @foreach (var property in ViewData.ModelMetadata.Properties)
                {
                    <div>
                        @Html.Hidden(property.PropertyName)
                    </div>
                }

                @await Html.PartialAsync("SaveButtons")
            }
        </div>
    </div>
    <div class="col col-sm-4"></div>
</div>